// THIS FILE WAS GENERATED BY `xtp-go-bindgen`. DO NOT EDIT.
package main

import (
	pdk "github.com/extism/go-pdk"
)

//export calculateGeometricMean
func _CalculateGeometricMean() int32 {
	var err error
	_ = err
	pdk.Log(pdk.LogDebug, "CalculateGeometricMean: getting JSON input")
	var input map[string]interface{}
	err = pdk.InputJSON(&input)
	if err != nil {
		pdk.SetError(err)
		return -1
	}

	pdk.Log(pdk.LogDebug, "CalculateGeometricMean: calling implementation function")
	output, err := CalculateGeometricMean(input)
	if err != nil {
		pdk.SetError(err)
		return -1
	}

	pdk.Log(pdk.LogDebug, "CalculateGeometricMean: setting JSON output")
	err = pdk.OutputJSON(output)
	if err != nil {
		pdk.SetError(err)
		return -1
	}

	pdk.Log(pdk.LogDebug, "CalculateGeometricMean: returning")
	return 0
}

// Output from the calculateGeometricMean function
type GeometricMeanResponse struct {
	// The calculated geometric mean of the input numbers. Returns 0 if calculation results in NaN or if inputs are invalid.
	GeometricMean float32 `json:"geometricMean"`
}

// Note: leave this in place, as the Go compiler will find the `export` function as the entrypoint.
func main() {}
